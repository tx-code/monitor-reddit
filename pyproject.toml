[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "reddit-monitor"
version = "2.0.0"
description = "Reddit在线人数监控系统 - 基于Streamlit的现代化监控工具"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    { name = "Claude Code Assistant" },
]
keywords = ["monitoring", "reddit", "streamlit", "data-visualization", "analytics"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: System :: Monitoring",
]

dependencies = [
    "requests>=2.28.0",
    "beautifulsoup4>=4.12.0",
    "streamlit>=1.40.1",
    "pandas>=2.0.3",
    "plotly>=6.3.0",
    "numpy>=1.24.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-mock>=3.7.0",
    "pytest-cov>=4.0.0",
]
build = [
    "pyinstaller>=5.0.0",
    "pillow>=8.0.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-mock>=3.7.0",
    "pytest-cov>=4.0.0",
    "pyinstaller>=5.0.0", 
    "pillow>=8.0.0",
]

[project.scripts]
reddit-monitor = "scripts.run_app:main"
reddit-monitor-bg = "scripts.background_monitor:main"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-mock>=3.7.0",
    "pytest-cov>=4.0.0",
    "pyinstaller>=5.0.0",
    "pillow>=8.0.0",
]

[tool.uv.sources]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "network: marks tests that require network access",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "build/*",
    "dist/*",
    "release/*",
    ".*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
